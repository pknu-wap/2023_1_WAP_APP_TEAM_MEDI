# 라이브러리 버전---------------------------------------------------------------------------------------------------------------
[versions]
# kotlin
kotlin = "1.8.22"
kotlinCompilerExtension = "1.4.8"
kotlinxCoroutines = "1.7.3"
kotlinxSerializationJson = "1.5.0"
kotlinxDateTime = "0.4.0"
ksp = "1.8.22-1.0.11"

androidGradlePlugin = "8.0.2"
androidDesugarJdkLibs = "2.0.3"
photoview = "2.3.0"

lz4Java = "1.8.0"

# androidx
androidxCore = "1.10.1"
androidxActivity = "1.7.2"
androidxFragment = "1.6.1"
androidxNavigation = "2.6.0"
androidxComposeBom = "2023.06.01"
androidxConcurrentFutures = "1.1.0"
androidxLifecycle = "2.6.1"
androidxDatastore = "1.0.0"
androidxWork = "2.8.1"
androidxRoom = "2.5.2"
androidxRecyclerview = "1.3.1"
androidxRecyclerviewSelection = "1.1.0"
androidxAppcompat = "1.6.1"
androidxPreferenceKtx = "1.2.0"
androidxConstraintlayout = "2.1.4"
androidxConstraintlayoutCompose = "1.0.1"
androidxGridlayout = "1.0.0"
androidxHilt = "2.47"
androidxHiltNavigationCompose = "1.0.0"
androidxHiltWork = "1.0.0"
androidxHiltNavigationFragment = "1.0.0"
androidxWindowManager = "1.0.0"
androidXTestEspresso = "3.5.1"
androidXTestRunner = "1.5.2"
androidXTestRules = "1.5.0"
androidXTestCore = "1.5.0"
androidXTestAnnotation = "1.0.1"
androidXTestJUnit = "1.1.5"
androidXPaging = "3.2.0"
androidXAsynclayoutinflater = "1.1.0-alpha01"

hiltTesting = "2.44"

androidXSplashScreen = "1.0.1"

protocolBuffer = "3.23.1"
protoBufGradlePlugin = "0.9.3"
googleOssPlugin = "0.10.6"

androidXTestTruth = "1.5.0"
androidXTestOrchestra = "1.4.2"
androidXTestArch = "2.1.0"

cameraX = "1.2.3"
accompanist = "0.30.1"

jUnit = "4.13.2"
mockit = "5.4.0"
mockitKotlin = "5.0.0"
robolectric = "4.10.3"
lottie = "6.0.0"


material = "1.9.0"
glide = "4.15.1"
glideCompose = "1.0.0-alpha.3"
gms = "4.3.15"
retrofit2 = "2.9.0"
retrofit2KotlinxSerializationJson = "1.0.0"
androidArchLifecycle = "1.1.1"

okhttp3 = "4.11.0"

flexbox = "3.0.0"

compileSdk = "33"
targetSdk = "33"
minSdk = "28"

#firebase
firebaseCrashlytics = "18.4.0"
firebaseCrashlyticsGradlePlugin = "2.9.5"
firebaseAnalytics = "21.3.0"

taskVision = "0.4.4"
playServicesTfliteJava = "16.1.0"
playServicesTfliteGpu = "16.2.0"
tflite = "2.13.0"
tfliteSupport = "0.4.4"
gpuDelegate = "0.4.4"
tfliteMetadata = "0.4.4"
tfliteGpu = "2.13.0"

smart_deeplink_core = "1.0.0-rc06"
smart_deeplink_annotation = "1.0.0-rc05"
simple_dialog = "1.0.1"
ksealedbinding = "1.0.0"

ktlint = "0.50.0"
ktlint_gradle_plugin = "11.5.0"
detekt = "1.23.0"

jsoup = "1.16.1"

# 라이브러리 의존성------------------------------------------------------------------------------------------------------------------------
[libraries]
android-desugarJdkLibs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "androidDesugarJdkLibs" }

tensorflow-lite-taskVisionPlayServices = { module = "org.tensorflow:tensorflow-lite-task-vision-play-services", version.ref = "taskVision" }
tensorflow-lite-playServicesTfliteGpu = { module = "com.google.android.gms:play-services-tflite-gpu", version.ref = "playServicesTfliteGpu" }
tensorflow-lite-playServicesTfliteJava = { module = "com.google.android.gms:play-services-tflite-java", version.ref = "playServicesTfliteJava" }
tensorflow-lite-lite = { module = "org.tensorflow:tensorflow-lite", version.ref = "tflite" }
tensorflow-lite-support = { module = "org.tensorflow:tensorflow-lite-support", version.ref = "tfliteSupport" }
tensorflow-lite-gpuDelegate = { module = "org.tensorflow:tensorflow-lite-gpu-delegate-plugin", version.ref = "gpuDelegate" }
tensorflow-lite-gpu = { module = "org.tensorflow:tensorflow-lite-gpu", version.ref = "tfliteGpu" }
tensorflow-lite-metadata = { module = "org.tensorflow:tensorflow-lite-metadata", version.ref = "tfliteMetadata" }



# androidX--------------------------------------------------------------------------------------------------------------------
androidx-splash = { module = "androidx.core:core-splashscreen", version.ref = "androidXSplashScreen" }

# compose --------------------------------------------------------------------------------------------------------------------------------
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "androidxActivity" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "androidxNavigation" }
androidx-lifecycle-runtime-compose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
androidx-hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "androidxHiltNavigationCompose" }
androidx-constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "androidxConstraintlayoutCompose" }

# Accompanist----------------------------------------------------------------------------------------------------------------------------
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }

androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "androidxComposeBom" }
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-compose-material3-windowSizeClass = { group = "androidx.compose.material3", name = "material3-window-size-class" }
androidx-compose-runtime = { group = "androidx.compose.runtime", name = "runtime" }
androidx-compose-ui-test-junit = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-compose-ui-util = { group = "androidx.compose.ui", name = "ui-util" }
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-compose-foundation = { group = "androidx.compose.foundation", name = "foundation" }
androidx-compose-foundation-layout = { group = "androidx.compose.foundation", name = "foundation-layout" }

androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidxAppcompat" }
androidx-preference-ktx = { group = "androidx.preference", name = "preference-ktx", version.ref = "androidxPreferenceKtx" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidxCore" }
androidx-fragment = { group = "androidx.fragment", name = "fragment-ktx", version.ref = "androidxFragment" }
androidx-activity = { group = "androidx.activity", name = "activity-ktx", version.ref = "androidxActivity" }

androidx-paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "androidXPaging" }
androidx-paging-compose = { module = "androidx.paging:paging-compose", version.ref = "androidXPaging" }

androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "androidxDatastore" }
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "androidxDatastore" }

# 미사용
androidx-lifecycle-livedata-ktx = { group = "androidx.lifecycle", name = "lifecycle-livedata-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-ktx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-savedstate = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-savedstate", version.ref = "androidxLifecycle" }
androidx-lifecycle-compilerKapt = { group = "androidx.lifecycle", name = "lifecycle-compiler", version.ref = "androidxLifecycle" }

androidx-navigation-testingAndroidTestImplementation = { group = "androidx.navigation", name = "navigation-testing", version.ref = "androidxNavigation" }
androidx-navigation-fragment-ktx = { group = "androidx.navigation", name = "navigation-fragment-ktx", version.ref = "androidxNavigation" }
androidx-navigation-ui-ktx = { group = "androidx.navigation", name = "navigation-ui-ktx", version.ref = "androidxNavigation" }
androidx-navigation-dynamic = { group = "androidx.navigation", name = "navigation-dynamic-features-fragment", version.ref = "androidxNavigation" }

androidx-work-ktx = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "androidxWork" }
androidx-work-testingAndroidTestImplementation = { group = "androidx.work", name = "work-testing", version.ref = "androidxWork" }

androidx-room-compileKsp = { group = "androidx.room", name = "room-compiler", version.ref = "androidxRoom" }
androidx-room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "androidxRoom" }
androidx-room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "androidxRoom" }
androidx-room-paging = { module = "androidx.room:room-paging", version.ref = "androidxRoom" }

androidx-recyclerview = { group = "androidx.recyclerview", name = "recyclerview", version.ref = "androidxRecyclerview" }
androidx-concurrentfutures = { module = "androidx.concurrent:concurrent-futures-ktx", version.ref = "androidxConcurrentFutures" }

androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidxConstraintlayout" }

androidx-asynclayoutinflater = { module = "androidx.asynclayoutinflater:asynclayoutinflater", version.ref = "androidXAsynclayoutinflater" }

# camerax --------------------------------------------------------------------------------------------------------------------------------

camera-core = { module = "androidx.camera:camera-core", version.ref = "cameraX" }
camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "cameraX" }
camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "cameraX" }
camera-view = { module = "androidx.camera:camera-view", version.ref = "cameraX" }
camera-extensions = { module = "androidx.camera:camera-extensions", version.ref = "cameraX" }
camera-video = { module = "androidx.camera:camera-video", version.ref = "cameraX" }

# androidTestImplementation------------------------------------------------------------------------------------------------------------------------
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidXTestEspresso" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidXTestRunner" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidXTestRules" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidXTestCore" }
androidx-test-core-ktx = { module = "androidx.test:core-ktx", version.ref = "androidXTestCore" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidXTestJUnit" }
androidx-test-ext-junit-ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "androidXTestJUnit" }
androidx-test-ext-truth = { module = "androidx.test.ext:truth", version.ref = "androidXTestTruth" }
androidx-test-arch-core = { module = "androidx.arch.core:core-testing", version.ref = "androidXTestArch" }
android-google-dagger-hilt-testing = { group = "com.google.dagger", name = "hilt-android-testing", version.ref = "hiltTesting"}

# testImplementation------------------------------------------------------------------------------------------------------------------------
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockit" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitKotlin" }
junit = { module = "junit:junit", version.ref = "jUnit" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
android-test-dagger-hilt = { module = "com.google.dagger:hilt-android-testing", version.ref = "hiltTesting"}
android-flexbox = { module = "com.google.android.flexbox:flexbox", version.ref = "flexbox" }
google-dagger-hilt-testing = {module = "com.google.dagger:hilt-android-testing", version.ref="hiltTesting"}

# firebase--------------------------------------------------------------------------------------------------------------------
firebase-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics-ktx", version.ref = "firebaseCrashlytics" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics-ktx", version.ref = "firebaseAnalytics" }

# hilt------------------------------------------------------------------------------------------------------------------------
androidx-hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "androidxHilt" }
androidx-hilt-android-testingAndroidTestImplementation = { group = "com.google.dagger", name = "hilt-android-testing", version.ref = "androidxHilt" }
androidx-hilt-compilerKapt = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "androidxHilt" }

# with Navigation---------------------------------------
androidx-hilt-navigation-fragment = { group = "androidx.hilt", name = "hilt-navigation-fragment", version.ref = "androidxHiltNavigationFragment" }

# with WorkManager----------------------------------
androidx-hilt-work = { group = "androidx.hilt", name = "hilt-work", version.ref = "androidxHiltWork" }
androidx-hilt-work-compilerKapt = { group = "androidx.hilt", name = "hilt-compiler", version.ref = "androidxHiltWork" }

# kotlin--------------------------------------------------------------------------------------------------------------

kotlin-stdlib-root = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin" }
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-testImplementation = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }

# retrofit2--------------------------------------------------------------------------------------------------------------
retrofit-core = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit2" }
retrofit-scalars = { group = "com.squareup.retrofit2", name = "converter-scalars", version.ref = "retrofit2" }
retrofit-kotlinx-serialization = { group = "com.jakewharton.retrofit", name = "retrofit2-kotlinx-serialization-converter", version.ref = "retrofit2KotlinxSerializationJson" }

# okhttp3--------------------------------------------------------------------------------------------------------------
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp3" }
okhttp-logginginterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp3" }

# glide--------------------------------------------------------------------------------------------------------------
glide-main = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-kapt = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }
glide-kapt-arch = { module = "android.arch.lifecycle:compiler", version.ref = "androidArchLifecycle" }
glide-compose = { module = "com.github.bumptech.glide:compose", version.ref = "glideCompose" }
photo-view = { module = "com.github.chrisbanes:PhotoView", version.ref = "photoview" }

# lottie --------------------------------------------------------------------------------------------------------------
lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }

# material--------------------------------------------------------------------------------------------------------------
material-main = { module = "com.google.android.material:material", version.ref = "material" }

android-gradle-plugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
kotlin-gradle-plugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradle-plugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }

kotlin-reflection = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }

google-protobuf-kotlin-lite = { module = "com.google.protobuf:protobuf-kotlin-lite", version.ref = "protocolBuffer" }
google-protobuf-protoc = { module = "com.google.protobuf:protoc", version.ref = "protocolBuffer" }
google-oss-licenses-plugin = { module = "com.google.android.gms:oss-licenses-plugin", version.ref = "googleOssPlugin" }

smartdeeplink-core = { module = "io.github.pknujsp:smartdeeplink-core", version.ref = "smart_deeplink_core" }
smartdeeplink-annotation = { module = "io.github.pknujsp:smartdeeplink-annotation", version.ref = "smart_deeplink_annotation" }
simpledialog = { module = "io.github.pknujsp:simpledialog", version.ref = "simple_dialog" }

ksealedbinding-compiler = { module = "io.github.pknujsp:ksealedbinding-compiler", version.ref = "ksealedbinding" }
ksealedbinding-annotation = { module = "io.github.pknujsp:ksealedbinding-annotation", version.ref = "ksealedbinding" }

ktlint = { module = "com.pinterest:ktlint", version.ref = "ktlint" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

lz4 = { module = "org.lz4:lz4-java", version.ref = "lz4Java" }

ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }


# 라이브러리들을 묶어서 한번에 선언------------------------------------------------------------------------------------------------------------------------
[bundles]

cameras = ["camera-camera2", "camera-core", "camera-lifecycle", "camera-view", "camera-extensions", "camera-video"]

compose-debug = ["androidx-compose-ui-test-manifest", "androidx-compose-ui-tooling"]

composes = [
    "androidx-compose-runtime",
    "androidx-compose-ui-tooling-preview",
    "androidx-compose-ui-util",
    "androidx-compose-ui",
    "androidx-compose-foundation",
    "androidx-compose-foundation-layout"]

uiAndroidx = ["androidx-appcompat", "androidx-preference-ktx", "androidx-core-ktx", "androidx-fragment", "androidx-activity",
    "androidx-recyclerview", "androidx-constraintlayout", "androidx-constraintlayout-compose", "androidx-activity-compose",
]

lifecycles = ["androidx-lifecycle-livedata-ktx", "androidx-lifecycle-runtime-ktx", "androidx-lifecycle-viewmodel-ktx",
    "androidx-lifecycle-viewmodel-savedstate", "androidx-lifecycle-viewmodel-compose", "androidx-lifecycle-runtime-compose"]

retrofits = ["retrofit-core", "retrofit-kotlinx-serialization", "retrofit-scalars"]

navigations = ["androidx-navigation-fragment-ktx", "androidx-navigation-ui-ktx", "androidx-navigation-compose", "androidx-navigation-dynamic"]

kotlins = ["kotlin-stdlib-root", "kotlinx-coroutines-android", "kotlinx-serialization-json",
    "kotlinx-datetime", "kotlin-reflection"]

materials = ["material-main", "androidx-compose-material3", "androidx-compose-material3-windowSizeClass"]

glides = ["glide-main"]

glides-kapt = ["glide-kapt"]

hilts = ["androidx-hilt-navigation-compose", "androidx-hilt-android", "androidx-hilt-navigation-fragment",
    "androidx-hilt-work", "androidx-hilt-navigation-compose"]

rooms = ["androidx-room-ktx", "androidx-room-runtime", "androidx-room-paging"]

dataStores = ["androidx-datastore-preferences", "androidx-datastore"]

workManagers = ["androidx-work-ktx"]

testLocal = ["junit", "mockito-core", "mockito-kotlin", "kotlinx-coroutines-testImplementation", "robolectric","google-dagger-hilt-testing"]

testAndroid = ["androidx-test-espresso-core", "androidx-test-runner", "androidx-test-rules", "androidx-test-core", "androidx-test-ext-truth",
    "androidx-test-core-ktx", "androidx-test-ext-junit", "androidx-test-ext-junit-ktx", "androidx-test-arch-core", "android-google-dagger-hilt-testing"]

tflite = ["tensorflow-lite-lite", "tensorflow-lite-playServicesTfliteGpu", "tensorflow-lite-taskVisionPlayServices",
    "tensorflow-lite-playServicesTfliteJava", "tensorflow-lite-gpuDelegate", "tensorflow-lite-metadata",
    "tensorflow-lite-support", "tensorflow-lite-gpu"]

# ------------------------------------------------------------------------------------------------------------------------
[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }

firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlyticsGradlePlugin" }
gms = { id = "com.google.gms.google-services", version.ref = "gms" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "androidxHilt" }

kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
# for kotlin-serialization
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
# for Navigation
nav-safeargs-kotlin = { id = "androidx.navigation.safeargs.kotlin", version.ref = "androidxNavigation" }

kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }

ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
protobuf = { id = "com.google.protobuf", version.ref = "protoBufGradlePlugin" }

ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint_gradle_plugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
